{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst timePicker = document.querySelector('#datetime-picker');\nconst daysField = document.querySelector('[data-days]');\nconst hoursField = document.querySelector('[data-hours]');\nconst minutesField = document.querySelector('[data-minutes]');\nconst secondsField = document.querySelector('[data-seconds]');\nconst startBtn = document.querySelector('[data-start]');\nlet selectedTime, timer;\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction toggleDisableStartBtn(time = true) {\n  !startBtn.hasAttribute('disabled') || time\n    ? startBtn.setAttribute('disabled', true)\n    : startBtn.removeAttribute('disabled');\n}\n\ntoggleDisableStartBtn();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedTime = selectedDates[0];\n    const time = selectedTime <= new Date();\n\n    time && alert('Please choose a date in the future');\n    toggleDisableStartBtn(time);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', () => {\n  if (!timer) {\n    timePicker.setAttribute('disabled', 'true');\n    toggleDisableStartBtn();\n    timer = setInterval(() => {\n      const ms = selectedTime.getTime() - new Date().getTime();\n      if (ms <= 0) {\n        timePicker.removeAttribute('disabled', 'true');\n        clearInterval(timer);\n        timer = null;\n        return;\n      }\n      const { days, hours, minutes, seconds } = convertMs(ms);\n\n      daysField.innerHTML = addLeadingZero(days);\n      hoursField.innerHTML = addLeadingZero(hours);\n      minutesField.innerHTML = addLeadingZero(minutes);\n      secondsField.innerHTML = addLeadingZero(seconds);\n    }, 1000);\n  }\n});\n"],"names":["timePicker","daysField","hoursField","minutesField","secondsField","startBtn","selectedTime","timer","addLeadingZero","value","toggleDisableStartBtn","time","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds"],"mappings":"mIAGA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAW,SAAS,cAAc,cAAc,EACtD,IAAIC,EAAcC,EAElB,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAsBC,EAAO,GAAM,CAC1C,CAACN,EAAS,aAAa,UAAU,GAAKM,EAClCN,EAAS,aAAa,WAAY,EAAI,EACtCA,EAAS,gBAAgB,UAAU,CACzC,CAEAK,IAEA,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBP,EAAeO,EAAc,GAC7B,MAAMF,EAAOL,GAAgB,IAAI,KAEjCK,GAAQ,MAAM,oCAAoC,EAClDD,EAAsBC,CAAI,CAC3B,CACH,EAEAG,EAAU,mBAAoBF,CAAO,EAErC,SAASG,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAf,EAAS,iBAAiB,QAAS,IAAM,CAClCE,IACHP,EAAW,aAAa,WAAY,MAAM,EAC1CU,IACAH,EAAQ,YAAY,IAAM,CACxB,MAAMS,EAAKV,EAAa,QAAO,EAAK,IAAI,KAAI,EAAG,UAC/C,GAAIU,GAAM,EAAG,CACXhB,EAAW,gBAAgB,WAAY,MAAM,EAC7C,cAAcO,CAAK,EACnBA,EAAQ,KACR,MACD,CACD,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtDf,EAAU,UAAYO,EAAeS,CAAI,EACzCf,EAAW,UAAYM,EAAeU,CAAK,EAC3Cf,EAAa,UAAYK,EAAeW,CAAO,EAC/Cf,EAAa,UAAYI,EAAeY,CAAO,CAChD,EAAE,GAAI,EAEX,CAAC"}